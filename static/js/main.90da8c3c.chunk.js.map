{"version":3,"sources":["components/Feedback/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Feedback/Notification/Notification.jsx","components/Feedback/Feedback.jsx","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","className","map","el","name","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Feedback","state","event","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","stateKeys","Object","keys","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPA4BeA,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACE,oBAAIC,UAAU,gBAAd,SACGF,EAAQG,KAAI,SAAAC,GAAE,OACb,oBAAIF,UAAU,gBAAd,SACE,wBACEG,KAAMD,EACNF,UAAU,eACVI,KAAK,SACLC,QAASN,EAJX,SAMGG,KAP8BA,WCe9BI,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAE/C,OACE,qBAAIX,UAAU,mBAAd,UACE,qBAAIA,UAAU,mBAAd,mBAAwCO,KACxC,qBAAIP,UAAU,mBAAd,sBAA2CQ,KAC3C,qBAAIR,UAAU,mBAAd,kBAAuCS,KACvC,qBAAIT,UAAU,mBAAd,mBAAwCU,KACxC,qBAAIV,UAAU,mBAAd,iCACuBW,EADvB,WCGSC,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,8BACE,4BAAIA,OC6EKC,G,kNAxEbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPV,gBAAkB,SAAAiB,GAChB,IAAQb,EAASa,EAAMC,OAAfd,KAEK,SAATA,GACF,EAAKe,UAAS,kBAAe,CAAEX,KAAjB,EAAGA,KAA2B,MAEjC,YAATJ,GACF,EAAKe,UAAS,kBAAkB,CAAEV,QAApB,EAAGA,QAAoC,MAE1C,QAATL,GACF,EAAKe,UAAS,kBAAc,CAAET,IAAhB,EAAGA,IAAwB,O,EAG7CU,mBAAqB,WACnB,MAA+B,EAAKJ,MACpC,OADA,EAAQR,KAAR,EAAcE,IAAd,EAAmBD,S,EAIrBY,gCAAkC,SAACV,EAAOH,GACxC,OAAOc,KAAKC,MAAO,IAAMZ,EAASH,I,4CAGpC,WACE,MAA+BgB,KAAKR,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQa,KAAKJ,qBACbR,EAAqBY,KAAKH,gCAC9BV,EACAH,GAEIiB,EAAYC,OAAOC,KAAKH,KAAKR,OACnC,OACE,0BAASf,UAAU,WAAnB,UACE,uDACA,cAAC,EAAD,CACEF,QAAS0B,EACTzB,gBAAiBwB,KAAKxB,kBAExB,4CACCW,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcE,QAAS,6B,GArDVc,IAAMC,YCCdC,EANH,WACV,OAEE,cAAC,EAAD,KCAJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.90da8c3c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"feedback-list\">\r\n        {options.map(el => (\r\n          <li className=\"feedback-item\" key={el}>\r\n            <button\r\n              name={el}\r\n              className=\"feedback-btn\"\r\n              type=\"button\"\r\n              onClick={onLeaveFeedback}\r\n            >\r\n              {el}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func,\r\n  options: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  \r\n  return (\r\n    <ul className=\"statistics__list\">\r\n      <li className=\"statistics__item\">Good: {good}</li>\r\n      <li className=\"statistics__item\">Neutral: {neutral}</li>\r\n      <li className=\"statistics__item\">Bad: {bad}</li>\r\n      <li className=\"statistics__item\">Total:{total}</li>\r\n      <li className=\"statistics__item\">\r\n        PositivePercentage: {positivePercentage}%\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport Notification from './Notification/Notification';\r\nimport './Feedback.css';\r\n\r\nclass Feedback extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  onLeaveFeedback = event => {\r\n    const { name } = event.target;\r\n\r\n    if (name === 'good') {\r\n      this.setState(({ good }) => ({ good: good + 1 }));\r\n    }\r\n    if (name === 'neutral') {\r\n      this.setState(({ neutral }) => ({ neutral: neutral + 1 }));\r\n    }\r\n    if (name === 'bad') {\r\n      this.setState(({ bad }) => ({ bad: bad + 1 }));\r\n    }\r\n  };\r\n  countTotalFeedback = () => {\r\n    const { good, bad, neutral } = this.state;\r\n    return good + bad + neutral;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = (total, good) => {\r\n    return Math.round((100 / total) * good);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage(\r\n      total,\r\n      good,\r\n    );\r\n    const stateKeys = Object.keys(this.state);\r\n    return (\r\n      <section className=\"Feedback\">\r\n        <h1>Please leave feedback</h1>\r\n        <FeedbackOptions\r\n          options={stateKeys}\r\n          onLeaveFeedback={this.onLeaveFeedback}\r\n        />\r\n        <h2>Statistics</h2>\r\n        {total ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            positivePercentage={positivePercentage}\r\n          ></Statistics>\r\n        ) : (\r\n          <Notification message={'No feedback given'} />\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\nFeedback.propTypes = {\r\n  state: PropTypes.shape({\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n  }),\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n  onLeaveFeedback: PropTypes.func,\r\n  show: PropTypes.func,\r\n  countPositiveFeedbackPercentage: PropTypes.func,\r\n  countTotalFeedback: PropTypes.func,\r\n};\r\n\r\nexport default Feedback;\r\n","// import FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\nimport Feedback from './components/Feedback/Feedback'\r\n\r\nconst App = () => {\r\n  return (\r\n      \r\n    <Feedback/>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}